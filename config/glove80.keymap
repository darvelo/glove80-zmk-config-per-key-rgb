
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2023 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
/* Include all behavior includes needed */
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/rgb_colors.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb_colors.h>

#define HYPER LC(LS(LG(LALT)))
#define HYPR(KC) LC(LS(LG(LA(KC))))

#define HYPER_W LC(LS(LG(LA(W))))
#define HYPER_E LC(LS(LG(LA(E))))
#define HYPER_UP LC(LS(LG(LA(UP))))

#define LAYER_TD(KC) &mt

//
// Base layers.
//
#define MAC 0        // Default layer
#define LOWER 1      // Generic lowest layer
//#define LINUX 10   // Linux keys
//
// Workflow layers.
//
#define PHOTOSHOP 2  // Photoshop
#define BLENDER 3    // Blender
//#define BLDR2 40   // Blender 2nd layer
//#define BLNM 50    // Blender number input layer
//#define CODE 60    // Used for programming. Slight variation on the MAC layer.
//
// Utility layers.
//
//#define SYMB 70    // symbols
//#define NUMS 80    // Turns num keys into numbers
//#define MDIA 90    // media keys
//#define MVMT 100   // Cursor movement and selection
#define HIGHER 4     // Generic highest layer
#define MAGIC 5      // Keyboard-specific config keys

/* To deal with the situation where there is no Lower layer, to keep &lower happy */
#ifndef LOWER
#define LOWER 1
#endif

/* Custom Device-tree */
/* Empty underglow layer definition (for copy-paste)
        mylayer {
            layer-id = <LAYER_Name>;
            bindings = <
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___                                                                  &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___                                                  &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___                                                  &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___                                                  &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___  &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___ &ug ___ &ug ___ &ug ___         &ug ___ &ug ___ &ug ___  &ug ___ &ug ___ &ug ___         &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                >;
        };
*/
/ {
    underglow-layer {
        compatible  = "zmk,underglow-layer";

        lower {
            bindings = <
                ______ ______ ______ ______ ______                                                          ______ ______ ______ ______ ______
                PURPLE   PINK   PINK   PINK   PINK   PINK                                            ______   GOLD ORANGE ORANGE ORANGE    RED
                PURPLE ______ ______ ORANGE ______ ______                                            ______ YELLOW YELLOW YELLOW ORANGE ______
                PURPLE ______ ORANGE    RED ORANGE ______                                            ______ YELLOW YELLOW YELLOW ORANGE ______
                  BLUE ______    RED    RED    RED ______ ______ ______ ______  ______ ______ ______ ______ YELLOW YELLOW YELLOW    RED   BLUE
                ______ ______ ORANGE ORANGE ORANGE        ______  GREEN ______  ______ ______ ______        YELLOW YELLOW ORANGE    RED ______
                >;
            layer-id = <LOWER>;
        };

        photoshop {
            bindings = <
                &ug ___  &ug ___  &ug ___ &ug ___  &ug ___                                                                      &ug ___  &ug ___  &ug ___  &ug ___  &ug ___
                &ug ___  &ug ___  &ug ___ &ug ___  &ug ___  &ug ___                                                    &ug PINK &ug PINK &ug PINK &ug PINK &ug PINK &ug ___
                &ug ___  &ug BLUE &ug ___ &ug BLUE &ug BLUE &ug BLUE                                                   &ug ___  &ug ___  &ug ___  &ug ___  &ug ___  &ug BLUE
                &ug ___  &ug BLUE &ug ___ &ug ___  &ug ___  &ug BLUE                                                   &ug ___  &ug ___  &ug ___  &ug ___  &ug ___  &ug ___
                &ug BLUE &ug ___  &ug ___ &ug ___  &ug ___  &ug ___ &ug ___ &ug ___ &ug ___  &ug ___ &ug ___   &ug ___ &ug ___  &ug ___  &ug ___  &ug ___  &ug ___  &ug BLUE
                &ug ___  &ug ___  &ug ___ &ug ___  &ug ___          &ug ___ &ug ___ &ug ___  &ug ___ &ug GREEN &ug ___          &ug ___  &ug ___  &ug ___  &ug ___  &ug ___
                >;
            layer-id = <PHOTOSHOP>;
        };
        blender {
            bindings = <
                &ug ___ &ug ___  &ug ___ &ug ___ &ug ___                                                                        &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___  &ug ___ &ug ___ &ug ___ &ug ___                                                        &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug ___  &ug ___ &ug ___ &ug ___ &ug ___                                                        &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug TEAL &ug ___ &ug RED &ug ___ &ug ___                                                        &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug BLUE &ug RED &ug RED &ug RED &ug ___ &ug ORANGE &ug BLUE &ug ___    &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                &ug ___ &ug BLUE &ug ___ &ug ___ &ug ___         &ug RED    &ug ___  &ug GREEN  &ug ___ &ug ___ &ug ___         &ug ___ &ug ___ &ug ___ &ug ___ &ug ___
                >;
            layer-id = <BLENDER>;
        };
        higher {
            bindings = <
                BLUE   BLUE   BLUE   BLUE   BLUE                                                            ______ ______ ______ ______ ______
                PURPLE   PINK   PINK   PINK   PINK   PINK                                            ______   GOLD ORANGE ORANGE ORANGE    RED
                PURPLE ______ ______ ORANGE ______ ______                                            ______ YELLOW YELLOW YELLOW ORANGE ______
                PURPLE ______ ORANGE    RED ORANGE ______                                            ______ YELLOW YELLOW YELLOW ORANGE ______
                  BLUE ______    RED    RED    RED ______ ______ ______ ______  ______ ______ ______ ______ YELLOW YELLOW YELLOW    RED   BLUE
                ______ ______ ORANGE ORANGE ORANGE        ______  GREEN ______  ______ ______ ______        YELLOW YELLOW ORANGE    RED ______
                >;
            layer-id = <HIGHER>;
        };
    };
};


/* Glove80 system behavior & macros */
/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: lower {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
    };
};


/ {
#ifdef BT_DISC_CMD
    behaviors {
        bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
        };
        bt_1: bt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_1>, <&bt BT_DISC 1>;
        };
        bt_2: bt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_2>, <&bt BT_DISC 2>;
        };
        bt_3: bt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_3>, <&bt BT_DISC 3>;
        };
    };
    macros {
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#else
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
#endif
};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };
};

/* #define for key positions */
#define POS_LH_T1 52
#define POS_LH_T2 53
#define POS_LH_T3 54
#define POS_LH_T4 69
#define POS_LH_T5 70
#define POS_LH_T6 71
#define POS_LH_C1R2 15
#define POS_LH_C1R3 27
#define POS_LH_C1R4 39
#define POS_LH_C1R5 51
#define POS_LH_C2R1 4
#define POS_LH_C2R2 14
#define POS_LH_C2R3 26
#define POS_LH_C2R4 38
#define POS_LH_C2R5 50
#define POS_LH_C2R6 68
#define POS_LH_C3R1 3
#define POS_LH_C3R2 13
#define POS_LH_C3R3 25
#define POS_LH_C3R4 37
#define POS_LH_C3R5 49
#define POS_LH_C3R6 67
#define POS_LH_C4R1 2
#define POS_LH_C4R2 12
#define POS_LH_C4R3 24
#define POS_LH_C4R4 36
#define POS_LH_C4R5 48
#define POS_LH_C4R6 66
#define POS_LH_C5R1 1
#define POS_LH_C5R2 11
#define POS_LH_C5R3 23
#define POS_LH_C5R4 35
#define POS_LH_C5R5 47
#define POS_LH_C5R6 65
#define POS_LH_C6R1 0
#define POS_LH_C6R2 10
#define POS_LH_C6R3 22
#define POS_LH_C6R4 34
#define POS_LH_C6R5 46
#define POS_LH_C6R6 64
#define POS_RH_T1 57
#define POS_RH_T2 56
#define POS_RH_T3 55
#define POS_RH_T4 74
#define POS_RH_T5 73
#define POS_RH_T6 72
#define POS_RH_C1R2 16
#define POS_RH_C1R3 28
#define POS_RH_C1R4 40
#define POS_RH_C1R5 58
#define POS_RH_C2R1 5
#define POS_RH_C2R2 17
#define POS_RH_C2R3 29
#define POS_RH_C2R4 41
#define POS_RH_C2R5 59
#define POS_RH_C2R6 75
#define POS_RH_C3R1 6
#define POS_RH_C3R2 18
#define POS_RH_C3R3 30
#define POS_RH_C3R4 42
#define POS_RH_C3R5 60
#define POS_RH_C3R6 76
#define POS_RH_C4R1 7
#define POS_RH_C4R2 19
#define POS_RH_C4R3 31
#define POS_RH_C4R4 43
#define POS_RH_C4R5 61
#define POS_RH_C4R6 77
#define POS_RH_C5R1 8
#define POS_RH_C5R2 20
#define POS_RH_C5R3 32
#define POS_RH_C5R4 44
#define POS_RH_C5R5 62
#define POS_RH_C5R6 78
#define POS_RH_C6R1 9
#define POS_RH_C6R2 21
#define POS_RH_C6R3 33
#define POS_RH_C6R4 45
#define POS_RH_C6R5 63
#define POS_RH_C6R6 79

/* Custom Defined Behaviors */
/ {
    behaviors {
//        layer_key: layer_key {
//            compatible = "zmk,behavior-tap-dance";
//            tapping-term-ms = <200>;
//            #binding-cells = <2>;
//            bindings = <&to>, <&kp>;
//        };
        photoshop_hold: photoshop_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "PHOTOSHOP_HOLD_TAP";
            #binding-cells = <0>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&to PHOTOSHOP>, <&kp A>;
        };
        blender_hold: blender_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "BLENDER_HOLD_TAP";
            #binding-cells = <0>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&to BLENDER>, <&kp B>;
        };
        blender: blender {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <200>;
            #binding-cells = <0>;
            bindings = <&mo HIGHER>, <&to HIGHER>;
        };
        higher: higher {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <200>;
            #binding-cells = <0>;
            bindings = <&mo HIGHER>, <&to HIGHER>;
        };
        raise: tt_raise {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <200>;
            #binding-cells = <0>;
            bindings = <&mo HIGHER>, <&to HIGHER>;
        };
    };

};

/* Automatically generated macro definitions */
/ {
    macros {
        layer_to_tap: layer_to_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&to>, <&kp>;
        };
    };
};

/* Automatically generated keymap */
/ {
    keymap {
        compatible = "zmk,keymap";

//        layer_Base {
//            bindings = <
//                &kp LGUI        &none  &none   &none   &none                                                                                                    &none      &none   &none     &none          &none
//                &kp ESC         &kp N  &kp N2  &kp N3  &kp N4  &kp N5                                                                                   &kp N6  &kp N7     &kp N8  &kp N9    &kp N0       &kp BSPC
//                &kp TAB         &kp A  &kp Z   &kp F   &kp P   &kp G                                                                                    &kp H   &kp J      &kp K   &kp L           &kp DOT     &kp RA(N8)
//                &kp EQUAL       &kp Q  &kp R   &kp S   &kp T   &kp D                                                                                    &kp U   &kp N      &kp E   &kp I          &kp O   &kp KP_SLASH
//                &kp RA(N5)      &kp W  &kp X   &kp C   &kp V   &kp B  &mt LSHFT N5  &kp LCTRL  &kp LS(LC(LALT))  &kp RALT  &kp RCTRL  &mt RSHFT MINUS   &kp Y   &kp SEMI   &kp M   &kp LS(COMMA)  &kp FSLH  &kp RA(MINUS)
//                &magic MAGIC 0  &none  &none   &none   &none          &kp SPACE     &lower     &kp LALT          &none     &raise          &kp RET              &none      &none   &kp SQT  &kp RBKT       &kp BSLH
//            >;
//        };

        // &caps_word
        // &key_repeat

        default_layer {
            display-name = "Mac";
            // -----------------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
            &photoshop_hold &blender_hold &to PHOTOSHOP  &to BLENDER   &kp F5                                                                                 &kp F6 &kp F7    &kp F8   &kp F9   &kp F10
            //&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                                   &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PAUSE_BREAK
            //&kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP                                                                                   &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PAUSE_BREAK

            &kp EQUAL      &kp N1      &kp N2  &kp N3   &kp N4    &kp N5                                                                &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
            &kp TAB        &kp Q       &kp W   &kp E    &kp R     &kp T                                                                 &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
            &kp ESC        &kp A       &kp S   &kp D    &kp F     &kp G                                                                 &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
            &kp GRAVE      &kp Z       &kp X   &kp C    &kp V     &kp B  &kp LSHFT  &kp LCTRL &higher      &kp LGUI &kp RCTRL &kp RGUI  &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp PG_UP
            &magic MAGIC 0 &kp HOME    &kp END &kp LEFT &kp RIGHT        &kp SPACE  &kp DEL   &kp LALT     &kp RALT &kp RET   &kp BSPC         &kp UP &kp DOWN  &kp LBKT &kp RBKT &kp PG_DN
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
            &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                                   &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PAUSE_BREAK
            &trans        &none         &none       &none       &none       &kp HOME                                                          &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp PSCRN
            &trans        &none         &none       &kp UP      &none       &kp END                                                           &kp RPAR     &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp SLCK
            &trans        &kp K_APP     &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_UP                                                         &kp PRCNT    &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &none
            &trans        &kp K_CMENU   &none       &kp F11     &kp F12     &kp PG_DN   &trans  &trans  &to MAC     &trans  &trans  &trans    &kp COMMA    &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
            &trans        &kp CAPS      &kp INS     &kp F11     &kp F12                 &trans  &trans  &trans      &trans  &trans  &trans                 &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &trans
            >;
        };

//        empty_layer {
//            display-name = "Empty";
//            bindings = <
//            &none &none &none &none &none                                                 &none &none &none &none &none
//            &none &none &none &none &none &none                                     &none &none &none &none &none &none
//            &none &none &none &none &none &none                                     &none &none &none &none &none &none
//            &none &none &none &none &none &none                                     &none &none &none &none &none &none
//            &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none
//            &none &none &none &none &none       &none &none &none &none &none &none       &none &none &none &none &none
//            >;
//        };

        photoshop_layer {
            display-name = "PHOTOSHOP";
            bindings = <
            &none &none &none &none &none                                                   &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none &none &none &to MAC &none &none &none &none &none &none &none &none &none
            &none &none &none &none &none       &none &none &none   &none &none &none       &none &none &none &none &none
            >;
        };

        blender_layer {
            display-name = "Blender";
            bindings = <
            &none &none &none &none &none                                                   &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none                                       &none &none &none &none &none &none
            &none &none &none &none &none &none &none &none &to MAC &none &none &none &none &none &none &none &none &none
            &none &none &none &none &none       &none &none &none   &none &none &none       &none &none &none &none &none
            >;
        };

        higher_layer {
            display-name = "Higher";
            bindings = <
            &kp C_BRI_DN &kp C_BRI_UP &kp C_PREV      &kp C_NEXT    &kp C_PP                                                                           &kp C_MUTE  &kp C_VOL_DN &kp C_VOL_UP &none &kp PAUSE_BREAK
            &trans       &kp KP_DOT   &kp KP_MULTIPLY &kp KP_DIVIDE &kp KP_EQUAL &kp LPAR                                                     &none    &none       &none        &none        &none &kp PSCRN
            &trans       &kp KP_MINUS &kp KP_N7       &kp KP_N8     &kp KP_N9    &kp RPAR                                                     &none    &kp HYPR(W) &kp HYPR(E)  &kp HYPR(UP) &none &kp SLCK
            &trans       &kp KP_PLUS  &kp KP_N4       &kp KP_N5     &kp KP_N6    &kp PRCNT                                                    &kp LEFT &kp DOWN    &kp UP       &kp RIGHT    &none &none
            &trans       &kp KP_ENTER &kp KP_N1       &kp KP_N2     &kp KP_N3    &kp COMMA &trans  &trans  &to MAC     &trans  &trans  &trans &none    &none       &none        &none        &none &trans
            &trans       &kp KP_ENTER &kp KP_N0       &kp KP_N0     &kp KP_DOT             &trans  &trans  &trans      &trans  &trans  &trans          &none       &none        &none        &none &trans
            >;
        };

        // Blender2 was just for KC_U, KC_J, KC_O, and LCTL(LALT(KC_KP_0))

        magic_layer {
            display-name = "Magic";
            bindings = <
            &bt BT_CLR    &none           &none           &none           &none                                                                               &none  &none  &none  &none  &bt BT_CLR_ALL
            &none         &none           &none           &none           &none           &none                                                        &none  &none  &none  &none  &none  &none
            &none         &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                              &none  &none  &none  &none  &none  &none
            &bootloader   &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                              &none  &none  &none  &none  &none  &bootloader
            &sys_reset    &none           &none           &none           &none           &none           &bt_2 &bt_3 &to MAC      &none &none &none   &none  &none  &none  &none  &none  &sys_reset
            &none         &none           &none           &none           &none                           &bt_0 &bt_1 &out OUT_USB &none &none &none          &none  &none  &none  &none  &none
            >;
        };

    };
};
